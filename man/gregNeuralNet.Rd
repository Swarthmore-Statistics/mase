% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gregNeuralNet.R
\name{gregNeuralNet}
\alias{gregNeuralNet}
\title{Compute a neural network model assisted estimator}
\usage{
gregNeuralNet(y, x_sample, x_pop, pi = NULL, pi2 = NULL,
  var_est = FALSE, var_method = "lin_HB", strata = NULL, H = 256,
  lr = 0.001, epochs = 10, batch_size = NULL,
  validation_split = 0.2, optimizer = NULL, loss = "MSE",
  verbose = 1)
}
\arguments{
\item{y}{A numeric vector of the sampled response variable.}

\item{x_sample}{A data frame of the auxiliary data in the sample.}

\item{x_pop}{A data frame of population level auxiliary information. It must contain the same names as x_sample.}

\item{pi}{A numeric vector of inclusion probabilities for each sampled unit in y.  If NULL, then simple random sampling without replacement is assumed.}

\item{pi2}{A square matrix of the joint inclusion probabilities.  Needed for the "lin_HT" variance estimator.}

\item{var_est}{A logical indicating whether or not to compute a variance estimator.  Default is FALSE.}

\item{var_method}{The method to use when computing the variance estimator.  Options are a Taylor linearized technique: "lin_HB"= Hajek-Berger estimator, "lin_HH" = Hansen-Hurwitz estimator, "lin_HTSRS" = Horvitz-Thompson estimator under simple random sampling without replacement, and "lin_HT" = Horvitz-Thompson estimator or a resampling technique: "bootstrap_SRS" = bootstrap variance estimator under simple random sampling without replacement. The default is "lin_HB".}

\item{strata}{A factor vector of the stratum membership.  If NULL, all units are put into the same stratum.  Must have same length as y.}

\item{H}{An integer for the size of the hidden layers.}

\item{lr}{The learning rate of the gradient descent algorithm.}

\item{epochs}{The number of training epochs to run.}

\item{batch_size}{Integer or NULL. Number of samples per gradient update. If unspecified, batch_size will default to 32.}

\item{validation_split}{Proportion of sample to make validation set for each epoch. Default is 0.2}

\item{optimizer}{Choice of gradient descent algorithm, default is `keras::optimizer_rmsprop()`.}

\item{loss}{Choice of loss function, default is MSE. see `keras::compile.keras`}

\item{verbose}{Verbosity mode (0 = silent, 1 = progress bar, 2 = one line per epoch).}
}
\value{
A greg object containing:
\itemize{
\item{pop_total: Estimate of population total}
\item{pop_mean: Estimate of the population mean}
\item{pop_total_var: Estimated variance of population total estimate}
\item{pop_mean_var: Estimated variance of population mean estimate}
\item{formula: Model formula}
\item{model: feed forward neural network model}
\item{y_hat_sample: Response estimates for sample}
\item{y_hat_pop: Response estimates for population}
}
}
\description{
Calculates a dense feed forward neural network model assisted estimator for a finite population mean or total based on sample data collected from a complex sampling design and auxiliary population data. Requires installation of keras.
}
\examples{
library(survey)
data(api)
gregNeuralNet(y = apisrs$api00, 
x_sample = apisrs[c("col.grad", "awards", "snum", "dnum", "cnum", "pcttest", "meals", "sch.wide")], 
x_pop = apipop[c("col.grad", "awards", "snum", "dnum", "cnum", "pcttest", "meals", "sch.wide")])

}
\references{
\insertRef{mcc17b}{mase}
}
\seealso{
\code{\link{greg}} for a linear or logistic regression model.
}
